spring:
#Redis存储配置
  redis:
    database: 0  # Redis数据库索引（默认为0）
    host: 127.0.0.1  # Redis服务器地址
    port: 6379 # Redis服务器连接端口
    password: 123456  # Redis服务器连接密码（默认为空）
    timeout: 5000  # 连接超时时间（毫秒）100
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1  # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0  # 连接池中的最小空闲连接
  cache.type: redis
  cloud:
    gateway:
      discovery.locator.enabled: true #启用了自动根据服务ID建立路由 ，若不想自动建立路由，可以将此项目注释掉
      discovery.locator.lowerCaseServiceId: true #使用小写方式的serviceid，否则必须使用大写的  （若不想自动建立路由，可以将）    
      locator:
        enabled: true
      routes:
        # 认证中心
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/auth/**
          filters:
            # 验证码处理
            - ValidateCodeGatewayFilter
            # 前端密码解密
            - PasswordDecoderFilter
        #UPMS 模块
        - id: upms-service
          uri: lb://upms-service
          predicates:
            - Path=/admin/**
          filters:
            # 限流配置
            - name: RequestRateLimiter
              args:
                key-resolver: '#{@remoteAddrKeyResolver}'
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
              # 降级配置
            - name: Hystrix
              args:
                name: default
                fallbackUri: 'forward:/fallback'
        # 代码生成模块
        - id: pig-codegen
          uri: lb://pig-codegen
          predicates:
            - Path=/gen/**


security:
  encode:
    # 前端密码密钥，必须16位
    key: 'thanks,cloudserv'

# 不校验验证码终端
ignore:
  clients:
    - test
# 配置输出日志          
logging:
  level:
    org.springframework.cloud.gateway: TRACE
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.ipc.netty: DEBUG
    